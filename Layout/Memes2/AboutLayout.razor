<article class="about">
    <h1>Propósito del curso</h1>

    <ul role="list">
        <li>
            Introducir a los estudiantes en técnicas avanzadas de programación orientada a objetos, incluyendo el
            uso correcto de la herencia —evitando anti-patrones como el problema de la clase base frágil—, la herencia
            múltiple y mixins, y el uso de interfaces y composición para crear software más flexible y mantenible.
        </li>
        <li>
            Enseñar metodologías rigurosas de testing, capacitando a los estudiantes para diseñar y ejecutar pruebas
            unitarias y basadas en propiedades para garantizar la robustez y fiabilidad del software.
        </li>
        <li>
            Explorar los paradigmas de programación funcional y genérica, con énfasis en el manejo de efectos
            secundarios, la programación sin estado y el uso avanzado de tipos para crear software más seguro y 
            mantenible.
        </li>
        <li>
            Desarrollar habilidades en el manejo de colecciones, centrándose en operaciones avanzadas y subtipado, 
            esenciales para el manejo eficaz de datos en aplicaciones modernas.
        </li>
        <li>
            Preparar a los estudiantes para utilizar y diseñar DSLs y técnicas de metaprogramación, facilitando la 
            creación de software más flexible y adaptado a dominios específicos.
        </li>
    </ul>

    <p>
        Este curso se basa en los conocimientos adquiridos en el curso "Metodologías de diseño y programación" de la
        Universidad de Chile, pero puede ser tomado por cualquier persona con conocimientos básicos de programación
        orientada a objetos en algún lenguaje de tipado estático. Se orienta a estudiantes que buscan especializarse
        en el diseño sofisticado de software y en técnicas de programación avanzadas, críticas en la industria actual.
    </p>
</article>
